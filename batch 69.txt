JAP C1 S3 INTRODUCTIONTOJAVA PC1

package com.jap.productmanagement;

import java.util.Scanner;

public class SellingPriceCalculation {

/*Participants are expected to run the main method and give input, that will be read by
  scanner .
  Avoid making any changes in main method*/

  public static void main(String[] args) {
    SellingPriceCalculation sellingPriceCalculation = new SellingPriceCalculation();
    Scanner scanner = new Scanner(System.in);
    System.out.println("Enter Item name");
    String productName = scanner.nextLine();
    System.out.println("Enter Selling Price");
    float wholeSalePrice = scanner.nextFloat();
    float retailPrice =  sellingPriceCalculation.revisedSellingPriceCalculator(productName , wholeSalePrice);
    System.out.println("Revised Selling Price for  " + productName + " is $" + retailPrice );
  }


--------------------------------------------------------------------------------------------
JAP C1 S3 INTRODUCTIONTOJAVA PC2

package com.jap.weightedaveragecalculator;

import java.util.Scanner;

public class WeightedAverageCalculation {

  // Function accepts academic scores as input parameters and outputs the overall
  // weighted average percentage of an individual.
  //Calculate the Overall Percentage
  public static void main(String[] args)
  {
	  WeightedAverageCalculation weightedAverageCalculation = new WeightedAverageCalculation();
	  Scanner scanner = new Scanner(System.in);
	  System.out.println("Enter the score of assignment");
	  int assignmentScore=scanner.nextInt();
	  System.out.println("Enter the score of project");
	  int projectScore=scanner.nextInt();
	  System.out.println("Enter the score of quiz");
	  int quizScore=scanner.nextInt();
	  System.out.println("Enter the score of midterm");
	  int midTermScore=scanner.nextInt();
	  System.out.println("Enter the score of finalExam");
	  int finalExamScore=scanner.nextInt();
	  float overallPercentage=weightedAverageCalculation.averageCalculation(assignmentScore,projectScore,quizScore,midTermScore,finalExamScore);
	  System.out.println("Overall Percentage:"+overallPercentage);
  }

  public float averageCalculation(int assignmentScore, int projectScore, int quizScore, int midTermScore,
      int finalExamScore) {
		  System.out.println("weights		%value of scores");
		  System.out.println("assignments	"+assignmentScore*0.1f);
		  System.out.println("projects	    "+projectScore*0.35f);
		  System.out.println("Quiz	        "+quizScore*0.1f);
		  System.out.println("mid term	    "+midTermScore*0.15f);
		  System.out.println("Final Exam	"+finalExamScore*0.3f);

      float overallPercentage = assignmentScore*0.1f + projectScore*0.35f + quizScore*0.1f + midTermScore*0.15f + finalExamScore*0.3f;
      
      return overallPercentage;
  }

}

--------------------------------------------------------------------------------------------------------
JAP C1 S3 INTRODUCTIONTOJAVA PC3

package com.jap.calorietracker;


public class CalorieTracker {

    //This function takes the calories burnt by the activities and the calorie intake in a day
    // and returns the weight lost by Anne

    public int weightLostInAMonth(int cycling,int running,int swimming,int calorieIntake)
    {
        // write logic here
		calorieIntake=30*calorieIntake;
		int caloriesBurnt=4*2*(cycling+running+swimming);
		if (caloriesBurnt>0)
		return (caloriesBurnt-calorieIntake)/1000;
		else
		return 0;

    }


    public static void main(String[] args) {
        CalorieTracker ct = new CalorieTracker();
        System.out.println("Weight lost by Anne in a month is : "+ct.weightLostInAMonth(300,200,500,2000)+" pounds");

    }
}


------------------------------------------------------------------------------------------------------
JAP C1 S6 FUNCTIONS PC1

package com.jap.areacalculator;

import java.util.Scanner;

public class AreaCalculator {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Select an option from list to calculate area of fence");
        System.out.println("1. Square area for the chickens");
        System.out.println("2. Circular area for ducks");
        System.out.println("3. Rectangular area for cows");
        System.out.println();
        // Input choice from user
        int choice = scanner.nextInt();
		System.out.println("Enter side of square");
		
		double sq=scanner.nextDouble();
		System.out.println("Enter radius of circle");
		double ci=scanner.nextDouble();
		System.out.println("Enterlength of rectangle");
		double rel=scanner.nextDouble();
		System.out.println("Enter breadth of rectangle");
		double reb=scanner.nextDouble();
		AreaCalculator arc=new AreaCalculator();
		
		



        // Make a call to calculateAreaOfFence(int choice) and pass the choice made by user to it
		
		arc.calculateAreaOfFence(choice,sq,ci,rel,reb);
		

    }

    // Function to calculate area of fence by calling respective methods according to user's choice
    public void calculateAreaOfFence(int choice,double sq,double ci,double rel,double reb) {
		double result=0;
		if(choice==1){
			result=calculateAreaOfSquare(sq);
		}
		if(choice==2){
			result=calculateAreaOfCircle(ci);
		}
		if(choice==3){
			result=calculateAreaOfRectangle(rel,reb);
		}
		else
		 System.out.println("invalid input");

		System.out.println("Area for fence for chickens: "+result);

		
		

    }

    // Function to calculate area of square
    public  double calculateAreaOfSquare(double side) {
		double area=side*side;
        return area;
    }

    // Function to calculate area of circle
    public  double calculateAreaOfCircle(double radius) {
		double area=3.14*radius*radius;
        return area;
    }

    // Function to calculate area of rectangle
    public  double calculateAreaOfRectangle(double length, double breadth) {
		double area=length*breadth;
        return area;
    }
}

-----------------------------------------------------------------------------------------------------
JAP C1 S6 FUNCTIONS PC2

package com.jap.hourlywagescalculator;

import java.util.Scanner;

public class CalculateTotalPay {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter name of the employee");
        String name = sc.next();

        System.out.println("Enter base pay of the employee");
        double basePay = sc.nextDouble();

        System.out.println("Enter number of hours worked by the employee");
        int hoursWorked = sc.nextInt();

        CalculateTotalPay calculateTotalPay = new CalculateTotalPay();
        double salary = calculateTotalPay.calculateHourlyWages(basePay, hoursWorked);

        System.out.println("Name :: " + name);
        System.out.println("Base pay :: " + basePay + "$");
        System.out.println("Hours worked :: " + hoursWorked);
        System.out.println();
        System.out.println("Salary of employee :: " + salary + "$");

    }

    // Function to calculate wage of employee by analysing base pay and hours worked by employee
    public double calculateHourlyWages(double basePay, int hoursWorked) {
        int overtime;
        double pay;
        CalculateTotalPay totalPay=new CalculateTotalPay();
        if(basePay>=12&&hoursWorked>0){
            if(totalPay.calculateOnHourlyBasis(hoursWorked)){
                overtime=hoursWorked-40;
                pay=basePay*40+(2*(basePay*overtime));
            }
            else
            {
                pay=basePay*hoursWorked; 
            }
            return pay;
        }
        else
            return 0;
    }

    // Function to estimate if an employee has worked more than 40 hrs to get overtime pay
    public boolean calculateOnHourlyBasis(int hoursWorked) {
        if(hoursWorked>40&&hoursWorked<60)
            return true;        
        else
            return false;
    }

    // Function to check if base pay is more than minimum wage
    public boolean checkBasePay(double basePay) {
        boolean basePayMoreThanMinimumWage;
        if(basePay>=12){
            basePayMoreThanMinimumWage = true;
        }
        else{
            basePayMoreThanMinimumWage = false;
        }
        return basePayMoreThanMinimumWage;
    }
}
